<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
           http://www.springframework.org/schema/aop     http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
           http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
           http://www.springframework.org/schema/tx      http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
       "
	default-lazy-init="true">
	
	<!-- 扫描service、dao组件 -->
	<context:component-scan base-package="com.paincupid.springmvc.*.service,com.paincupid.springmvc.*.persistence,com.shinva.yanz.service,com.shinva.yanz.data" >
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>


	<!-- 使用jackson 支持json Java中直接返回类，而不用再使用Json转换 2015.12.27 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jsonHttpMessageConverter" />
			</list>
		</property>
	</bean>
	<bean id="jsonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>



	<!-- 分解配置 jdbc.properites -->
	<!-- <context:property-placeholder location="classpath:jdbc.properties" 
		/> -->
	<!-- 数据源BoneCP -->
	<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
		<property name="driverClass" value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />
		<!-- <property name="driverClass" value="oracle.jdbc.driver.OracleDriver" /> -->
		<property name="jdbcUrl" value="jdbc:sqlserver://192.168.40.7:1433; DatabaseName=PSDATA_001_2006" />
		<property name="username" value="sa" />
		<property name="password" value="hare12345" />
		<property name="maxConnectionsPerPartition" value="30" />
		<property name="minConnectionsPerPartition" value="10" />
		<property name="partitionCount" value="1" />
		<property name="acquireIncrement" value="5" />
		<property name="statementsCacheSize" value="100" />
	</bean>
	<!-- sessionFactory 将spring和mybatis整合 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="com.paincupid.springmvc.domain" />
	</bean>

	<!-- 注册Mapper方式二：也可不指定特定mapper，而使用自动扫描包的方式来注册各种Mapper ，配置如下： -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.paincupid.springmvc.*.persistence" />
	</bean>

	<!-- 事务 -->
	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		scope="singleton">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="select*" read-only="true" />
			<tx:method name="add*" isolation="READ_COMMITTED" rollback-for="Exception" />
			<tx:method name="update*" isolation="READ_COMMITTED" rollback-for="Exception" />
			<tx:method name="delete*" isolation="READ_COMMITTED" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
	<!-- 在service层实现事务控制 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.paincupid.springmvc.*.service.*.*(..))" id="pointCut" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointCut" />
	</aop:config>
</beans>

